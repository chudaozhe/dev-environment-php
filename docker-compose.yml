version: '3'

networks:
  web-network:

services:
  docker-nginx:
    image: nginx:1.21.3
    ports:
      - 80:80
      - 443:443
    tty: true
    volumes:
      - ./data/www:/var/www
      - ./nginx/conf/fastcgi_params:/etc/nginx/fastcgi_params
      - ./nginx/conf/conf.d:/etc/nginx/conf.d
      - ./data/log/nginx:/var/log/nginx
    networks:
      - web-network

  docker-php-fpm:
    image: registry.cn-hangzhou.aliyuncs.com/cuiw/php:v2-mongodb
    tty: true
    volumes:
      - ./php-fpm/etc/php/php.ini:/usr/local/etc/php/php.ini
      - ./php-fpm/etc/php-fpm.d/docker.conf:/usr/local/etc/php-fpm.d/docker.conf
      - ./php-fpm/etc/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf

      - ./data/www:/var/www
      - ./data/log/php:/var/log/php
      - ./data/log/php-fpm:/var/log/php-fpm
    networks:
      - web-network

  docker-redis:
    image: redis:6.2.5
    restart: always
    tty: true
    command: redis-server /etc/redis.conf
    volumes:
      - ./redis/conf/redis.conf:/etc/redis.conf
      - ./data/log/redis:/var/log/redis
      - ./data/apps/redis/data:/var/lib/redis
    ports:
      - 6379:6379
    networks:
      - web-network

  docker-mysql:
    image: mysql:8.0.26
    restart: always
    tty: true
    volumes:
      - ./data/apps/mysql/data:/var/lib/mysql
#      - ./data/apps/mysql/backup:/data/backup
      - ./mysql/conf/my.cnf:/etc/my.cnf
      # 第一次启动时，数据库还原目录
#      - ./data/apps/mysql/source:/docker-entrypoint-initdb.d
    environment:
#      - "MYSQL_ROOT_PASSWORD=123456"
      - "MYSQL_ALLOW_EMPTY_PASSWORD=yes"
#      - "MYSQL_DATABASE=mydb"
    ports:
      - 3306:3306
    networks:
      - web-network
